/*
 * Click nbfs://nbhost/SystemFileSystem/Tbilllates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Tbilllates/GUIForms/JPanel.java to edit this tbilllate
 */
package com.mycompany.quanlycuahang;

import com.mycompany.quanlycuahang.dao.BillDao;
import com.mycompany.quanlycuahang.dao.BillDetailDao;
import com.mycompany.quanlycuahang.dao.BookDao;
import com.mycompany.quanlycuahang.helper.DatabaseHelper;
import com.mycompany.quanlycuahang.helper.MessageDialogHelper;
import com.mycompany.quanlycuahang.helper.Validator;
import com.mycompany.quanlycuahang.model.Bill;
import com.mycompany.quanlycuahang.model.BillDetail;
import com.mycompany.quanlycuahang.model.Book;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author admin
 */
public class BillManagementPanel extends javax.swing.JPanel {

    private DefaultTableModel tableModel;
    private boolean cbxMaDHCheck = false;
//    private int count = 1;
    private int MaCTDH = 0;
    private boolean checkClickcbxMaDH = false;
    private final SimpleDateFormat format = new SimpleDateFormat("yy/MM/dd");

    /**
     * Creates new form BillManagementPanel
     */
    public BillManagementPanel() {
        initComponents();
        initComboBoxMaDH();
        initComboBoxMASach();
        initTable();
        loadDataToTable();
        cbxMaDHCheck = true;
        txtSTT.setText(String.valueOf(checkClickcbxMaDH));
        btnLuuCTDH.setEnabled(checkClickcbxMaDH);
        btnXoaCTDH.setEnabled(checkClickcbxMaDH);
        btnXuatDonHang.setEnabled(checkClickcbxMaDH);

    }

    private void initTable() {

        tableModel = new DefaultTableModel();
        tableModel.setColumnIdentifiers(new String[]{"STT", "Mã Sách", "Số Lượng", "Đơn Giá", "Thành Tiền", "Mã"});
        tblBillDetail.setModel(tableModel);
    }

    //  The method create name colum of data table   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtMaDonHang = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMaKhachHang = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNhanVien = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtNgayTaoDon = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnNhapMoi = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnLuuCTDH = new javax.swing.JButton();
        btnXoaCTDH = new javax.swing.JButton();
        txtSoLuongThemVao = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cbxMaDH = new javax.swing.JComboBox<>();
        cbxMaSach = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtSTT = new javax.swing.JTextField();
        btnXuatDonHang = new javax.swing.JButton();
        btnInDonHang = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBillDetail = new javax.swing.JTable();

        jMenuItem1.setText("jMenuItem1");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Quản Lý Đơn Hàng");

        jLabel3.setText("Mã Đơn Hàng:");

        jLabel4.setText("Mã Khách Hàng:");

        jLabel5.setText("Nhân Viên:");

        jLabel6.setText("Ngày Tạo Đơn Hàng:");

        btnNhapMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/quanlycuahang/icons/new-document.png"))); // NOI18N
        btnNhapMoi.setText("Nhập Mới");
        btnNhapMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapMoiActionPerformed(evt);
            }
        });

        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/quanlycuahang/icons/save.png"))); // NOI18N
        btnLuu.setText("Tạo Đơn");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/quanlycuahang/icons/edit.png"))); // NOI18N
        btnCapNhat.setText("Cập Nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/quanlycuahang/icons/remove.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnNhapMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLuu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCapNhat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(48, 48, 48))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNhapMoi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLuu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCapNhat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnXoa)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMaDonHang)
                    .addComponent(txtMaKhachHang)
                    .addComponent(txtNhanVien)
                    .addComponent(txtNgayTaoDon, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaDonHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtNgayTaoDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        jLabel8.setText("Mã Sách:");

        jLabel10.setText("Số lượng:");

        btnLuuCTDH.setText("Thêm Sản Phẩm");
        btnLuuCTDH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuCTDHActionPerformed(evt);
            }
        });

        btnXoaCTDH.setText("Xóa Sản Phẩm");
        btnXoaCTDH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaCTDHActionPerformed(evt);
            }
        });

        txtSoLuongThemVao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSoLuongThemVaoKeyReleased(evt);
            }
        });

        jLabel13.setText("Mã Đơn Hàng:");

        cbxMaDH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxMaDH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbxMaDHMouseClicked(evt);
            }
        });
        cbxMaDH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxMaDHActionPerformed(evt);
            }
        });

        cbxMaSach.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("Mã:");

        txtSTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSTTActionPerformed(evt);
            }
        });

        btnXuatDonHang.setText("Xuất Đơn Hàng");
        btnXuatDonHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatDonHangActionPerformed(evt);
            }
        });

        btnInDonHang.setText("In Đơn Hàng");
        btnInDonHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInDonHangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel13)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSoLuongThemVao, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbxMaDH, 0, 260, Short.MAX_VALUE)
                    .addComponent(cbxMaSach, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSTT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(243, 243, 243))
                            .addComponent(btnLuuCTDH, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnXoaCTDH, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnInDonHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnXuatDonHang, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))))
                .addGap(31, 31, 31))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cbxMaDH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(btnLuuCTDH)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel11))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(txtSTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbxMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(btnXoaCTDH))))
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSoLuongThemVao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(btnXuatDonHang))
                .addGap(18, 18, 18)
                .addComponent(btnInDonHang)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel12.setText("Tổng tiền cần thanh toán: ");

        tblBillDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBillDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBillDetailMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblBillDetail);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(242, 242, 242))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1662, 1662, 1662)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1810, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(jSeparator3)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNhapMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapMoiActionPerformed
        txtMaDonHang.setText("");
        txtMaKhachHang.setText("");
        txtNhanVien.setText("");
        txtNgayTaoDon.setText("");
        txtSTT.setText("");
        txtSoLuongThemVao.setText("");
    }//GEN-LAST:event_btnNhapMoiActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        StringBuilder sb = new StringBuilder();     //  Create obj sb use check data    
        Validator.checkEmpty(txtMaDonHang, sb, "Mã đơn hàng chưa nhập");
        Validator.checkEmpty(txtMaKhachHang, sb, "Mã khách hàng chưa nhập");
        Validator.checkEmpty(txtNhanVien, sb, "Mã nhân viên chưa nhập");
        Validator.checkEmpty(txtNgayTaoDon, sb, "Ngày tạo đơn hàng chưa nhập");

        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb);
            return;
        }

        try {
            Bill bill = new Bill();
            bill.setMaDonHang(Integer.parseInt(txtMaDonHang.getText()));
            bill.setMaKH(txtMaKhachHang.getText());
            bill.setTenDangNhap(txtNhanVien.getText());
            bill.setNgayTaoDon(new Date(format.parse(txtNgayTaoDon.getText()).getTime()));

            BillDao bdao = new BillDao();
            if (bdao.insert(bill)) {
                JOptionPane.showMessageDialog(this, "Thông tin đơn hàng mới đã được lưu vào CSDL");
                cbxMaDH.addItem(txtMaDonHang.getText());    //The method help addItem in cbxMaDH
                btnNhapMoiActionPerformed(evt);
                loadDataToTable();
            } else {
                JOptionPane.showMessageDialog(this, "Thông tin đơn hàng chưa được lưu vào CSDL");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        StringBuilder sb = new StringBuilder();         //  Create obj sb use check data  
        Validator.checkEmpty(txtMaDonHang, sb, "Mã đơn hàng chưa nhập");
        Validator.checkEmpty(txtMaKhachHang, sb, "Mã khách hàng chưa nhập");
        Validator.checkEmpty(txtNhanVien, sb, "Mã nhân viên chưa nhập");
        Validator.checkEmpty(txtNgayTaoDon, sb, "Ngày tạo đơn chưa nhập");

        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb);
            return;
        }

        if (JOptionPane.showConfirmDialog(this, "Bạn có muốn cập nhật thông tin đơn hàng không ?",
                "Xác nhận", JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION) {
            return;
        }

        try {
            Bill bill = new Bill();
//           BillDetail bDetail = new BillDetail();   
            bill.setMaDonHang(Integer.parseInt(txtMaDonHang.getText()));
            bill.setMaKH(txtMaKhachHang.getText());
            bill.setTenDangNhap(txtNhanVien.getText());
            bill.setNgayTaoDon(new Date(format.parse(txtNgayTaoDon.getText()).getTime()));
//           bDetail.setMaDH(cbxMaDH.toString());
//           bDetail.setMaSach(cbxMaSach.toString());
            BillDao dao = new BillDao();
            if (dao.update(bill)) {
                JOptionPane.showMessageDialog(this, "Thông tin đơn hàng đã được cập nhật được lưu vào CSDL");
                loadDataToTable();

            } else {
                JOptionPane.showMessageDialog(this, "Cập nhật không thành công");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        StringBuilder sb = new StringBuilder();         //  Create obj sb use check data  
        Validator.checkEmpty(txtMaDonHang, sb, "Mã đơn hàng chưa nhập");

        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb);
            return;
        }
        if (JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa thông tin đơn hàng không ?",
                "Xác nhận", JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION) {
            return;
        }

        try {
            BillDao dao = new BillDao();
            BillDetailDao bDDao = new BillDetailDao();
            bDDao.deleteByBillId(Integer.parseInt(cbxMaDH.getSelectedItem().toString()));
            if (dao.delete(Integer.parseInt(cbxMaDH.getSelectedItem().toString()))) {
                JOptionPane.showMessageDialog(this, "Thông tin đơn hàng đã được xóa khỏi CSDL");
                loadDataToTable();
            } else {
                JOptionPane.showMessageDialog(this, "Mã số đơn hàng không tồn tại ");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLuuCTDHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuCTDHActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();     //  Create obj sb use check data    

        Validator.checkEmpty(txtSoLuongThemVao, sb, "Số lượng chưa nhập");

        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb);
            return;
        }

        try {
            BillDetail bDetail = new BillDetail();
            bDetail.setMaDH(Integer.parseInt(cbxMaDH.getSelectedItem().toString()));
            bDetail.setMaSach(cbxMaSach.getSelectedItem().toString());
            bDetail.setSoLuongThemVao(Integer.parseInt(txtSoLuongThemVao.getText()));
            bDetail.setMaChiTietDonHang(new Random().ints(0, 1000).distinct().toString());

            BillDetailDao bdao = new BillDetailDao();
            if (bdao.insert(bDetail)) {
                JOptionPane.showMessageDialog(this, "Sản phẩm đã thêm thành công");
                btnNhapMoiActionPerformed(evt);
                loadDataToTable();
            } else {
                JOptionPane.showMessageDialog(this, "Thông tin đơn hàng chưa được lưu vào CSDL");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnLuuCTDHActionPerformed

    private void btnXoaCTDHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaCTDHActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();         //  Create obj sb use check data  
        Validator.checkEmpty(txtSTT, sb, "Mã chưa nhập");
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb);
            return;
        }
        if (JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa thông tin chi tiết đơn hàng không ?",
                "Xác nhận", JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION) {
            return;
        }

        try {
            BillDetailDao dao = new BillDetailDao();
            if (dao.delete(txtSTT.getText())) {
                JOptionPane.showMessageDialog(this, "Thông tin đơn hàng đã được xóa khỏi CSDL");
                btnNhapMoiActionPerformed(evt);
                loadDataToTable();
            } else {
                JOptionPane.showMessageDialog(this, "Mã số đơn hàng không tồn tại ");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnXoaCTDHActionPerformed

    private void tblBillDetailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBillDetailMouseClicked
        // TODO add your handling code here:
        try {
            int row = tblBillDetail.getSelectedRow(); // nay dang bi loi

            if (row >= 0) {
                String id = (String) tblBillDetail.getValueAt(row, 5);              //method getValueAt take value hàng and value cột đầu tiên trong hàng
                BillDetailDao dao = new BillDetailDao();
                BillDetail bD = dao.findByIdDetail(id);

                if (bD != null) {
                    Object maSach = bD.getMaSach();
                    txtSoLuongThemVao.setText(String.valueOf(bD.getSoLuongThemVao()));
                    txtSTT.setText(bD.getMaChiTietDonHang());
                    cbxMaSach.setSelectedItem(maSach);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(this, e.getMessage(), "Lỗi");

        }
    }//GEN-LAST:event_tblBillDetailMouseClicked

    private void btnXuatDonHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatDonHangActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();     //  Create obj sb use check data    
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb);
            return;
        }

        try {
            BillDao bdao = new BillDao();
            Bill bill = bdao.findById(Integer.parseInt(cbxMaDH.getSelectedItem().toString()));
            if (bdao.updateTotalMoney(bill, Integer.parseInt(txtTongTien.getText())) && bdao.updateStatus(bill, 1)) {
                BillDetailDao bDDao = new BillDetailDao();
                List<BillDetail> list = bDDao.findAll();
                for (BillDetail billDetail : list) {
                    if (billDetail.getMaDH() == Integer.parseInt(cbxMaDH.getSelectedItem().toString())) {
                        BookDao bookDao = new BookDao();
                        Book book = bookDao.findById(billDetail.getMaSach());
                        if (billDetail.getSoLuongThemVao() <= book.getSoLuong()) {
                            int soLuong = book.getSoLuong() - billDetail.getSoLuongThemVao();
                            bookDao.updateQuantity(soLuong, book.getMaSach());
                        } else {
                            JOptionPane.showMessageDialog(this, "Số lượng nhập vào đang không hợp lý, hãy nhập lại");
                        }
                    }
                }
                JOptionPane.showMessageDialog(this, "Thông tin đơn hàng mới đã được lưu vào CSDL");
                btnNhapMoiActionPerformed(evt);
                loadDataToTable();
                cbxMaDHActionPerformed(evt);
            } else {
                JOptionPane.showMessageDialog(this, "Thông tin đơn hàng chưa được lưu vào CSDL");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnXuatDonHangActionPerformed

    private void cbxMaDHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxMaDHActionPerformed
        // TODO add your handling code here:

        if (cbxMaDHCheck) {
            try {
                BillDao bDao = new BillDao();
                Bill bill = bDao.findById(Integer.parseInt(cbxMaDH.getSelectedItem().toString()));
                if ((bill.getTrangThai()) == 1) {
                    btnLuuCTDH.setEnabled(checkClickcbxMaDH);
                    btnXoaCTDH.setEnabled(checkClickcbxMaDH);
                    btnXuatDonHang.setEnabled(checkClickcbxMaDH);
                } else {
                    btnLuuCTDH.setEnabled(!checkClickcbxMaDH);
                    btnXoaCTDH.setEnabled(!checkClickcbxMaDH);
                    btnXuatDonHang.setEnabled(!checkClickcbxMaDH);
                }
                txtMaDonHang.setText(cbxMaDH.getSelectedItem().toString());
                txtMaKhachHang.setText(bill.getMaKH());
                txtNhanVien.setText(bill.getTenDangNhap());
                txtNgayTaoDon.setText(String.valueOf(bill.getNgayTaoDon()));
                txtTongTien.setText(String.valueOf(bill.getTongTien()));
                loadDataToTable();
            } catch (Exception e) {
                e.printStackTrace();
                MessageDialogHelper.showErrorDialog(this, e.getMessage(), "Lỗi");
            }
        }
    }//GEN-LAST:event_cbxMaDHActionPerformed

    private void cbxMaDHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbxMaDHMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxMaDHMouseClicked

    private void txtSoLuongThemVaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSoLuongThemVaoKeyReleased
        // TODO add your handling code here:
        txtSoLuongThemVao.setText(txtSoLuongThemVao.getText());

        try {
            BookDao dao = new BookDao();
            Book book = dao.findById(cbxMaSach.getSelectedItem().toString());
            if (book.getSoLuong() - Integer.parseInt(txtSoLuongThemVao.getText()) < 0) {
                JOptionPane.showMessageDialog(this, "Số lượng sản phẩm vượt quá cho phép! \nHãy nhập lại!");
                btnLuuCTDH.setEnabled(checkClickcbxMaDH);
                btnXoaCTDH.setEnabled(checkClickcbxMaDH);
                btnXuatDonHang.setEnabled(checkClickcbxMaDH);
            } else {
                btnLuuCTDH.setEnabled(!checkClickcbxMaDH);
                btnXoaCTDH.setEnabled(!checkClickcbxMaDH);
                btnXuatDonHang.setEnabled(!checkClickcbxMaDH);
            }
        } catch (Exception e) {
            e.printStackTrace();

        }
    }//GEN-LAST:event_txtSoLuongThemVaoKeyReleased

    //The method help create Bill Copy
    private void btnInDonHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInDonHangActionPerformed
//        if(txtMaDonHang.getText().length() < 0){
//            return;
//        }
//        if(txtSoLuongThemVao.getText().length() <= 0){
//            return;
//        }
        
        
        try {
            Hashtable map = new Hashtable(); //Object map help fitler object need print
            JasperReport rpt = JasperCompileManager.compileReport("src/main/java/com/mycompany/quanlycuahang/rptXuatDonHang.jrxml");
            map.put("MaDH", Integer.parseInt(txtMaDonHang.getText()));        //MaDH o WHERE khi truy van
            Connection connection = DatabaseHelper.opConnection();
            
            JasperPrint p = JasperFillManager.fillReport(rpt, map, connection);    //Truyen data, tham so, ket noi      
            
            JasperViewer.viewReport(p,false);    // false is Boolean isExitOnClose 
        } catch (JRException ex) {
            Logger.getLogger(BillManagementPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BillManagementPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(BillManagementPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnInDonHangActionPerformed

    private void txtSTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSTTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSTTActionPerformed

    private void initComboBoxMASach() {
        try {
            Connection connection = DatabaseHelper.opConnection();
            String sql = "select masach from sach";
            PreparedStatement pstm = connection.prepareStatement(sql);
            ResultSet rs = pstm.executeQuery();
            cbxMaSach.removeAllItems();
            while (rs.next()) {
                cbxMaSach.addItem(rs.getString("masach"));
            }
            rs.close();
            pstm.close();
            connection.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }

    private void initComboBoxMaDH() {
        try {
            Connection connection = DatabaseHelper.opConnection();
            String sql = "select madh from donhang";
            PreparedStatement pstm = connection.prepareStatement(sql);
            ResultSet rs = pstm.executeQuery();
            cbxMaDH.removeAllItems();
            while (rs.next()) {
                cbxMaDH.addItem(rs.getString("madh"));
            }
            rs.close();
            pstm.close();
            connection.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }

    private void loadDataToTable() {
        txtTongTien.setText("");
        try {
            int stt = 1;
            BillDetailDao dao = new BillDetailDao();
            BillDao billDao = new BillDao();
            int tongTien[] = new int[billDao.IdMax().getMaDonHang() + 1];
            BookDao bookDao = new BookDao();
            List<BillDetail> list = dao.findAll();
            tableModel.setRowCount(0);
            for (BillDetail billDetail : list) {
                if (billDetail.getMaDH() == Integer.parseInt(cbxMaDH.getSelectedItem().toString())) {

                    Book book = bookDao.findById(billDetail.getMaSach());
                    if (billDetail.getSoLuongThemVao() <= book.getSoLuong()) {
                        tongTien[billDetail.getMaDH()] += book.getGiaTien() * billDetail.getSoLuongThemVao();
                    }
                    tableModel.addRow(new Object[]{
                        stt, billDetail.getMaSach(), billDetail.getSoLuongThemVao(), book.getGiaTien(), billDetail.getSoLuongThemVao() * book.getGiaTien(), billDetail.getMaChiTietDonHang()
                    });
                    stt++;
                    txtTongTien.setText(String.valueOf(tongTien[billDetail.getMaDH()]));
                }

            }
//            txtTongTien.setText(String.valueOf(tongTien.get(Integer.parseInt(cbxMaDH.getSelectedItem().toString()))));
            tableModel.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(this, e.getMessage(), "Lỗi");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnInDonHang;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnLuuCTDH;
    private javax.swing.JButton btnNhapMoi;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaCTDH;
    private javax.swing.JButton btnXuatDonHang;
    private javax.swing.JComboBox<String> cbxMaDH;
    private javax.swing.JComboBox<String> cbxMaSach;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable tblBillDetail;
    private javax.swing.JTextField txtMaDonHang;
    private javax.swing.JTextField txtMaKhachHang;
    private javax.swing.JTextField txtNgayTaoDon;
    private javax.swing.JTextField txtNhanVien;
    private javax.swing.JTextField txtSTT;
    private javax.swing.JTextField txtSoLuongThemVao;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables
}
